--- a/src/plasma/private/theme_p.cpp	2024-06-12 02:51:06.000000000 -0700
+++ b/src/plasma/pricate/theme_p.cpp	2024-06-17 22:07:46.425197078 -0700
@@ -20,7 +20,9 @@
 #include <KSharedConfig>
 #include <KWindowEffects>
 #include <KWindowSystem>
+#if HAVE_X11
 #include <KX11Extras>
+#endif
 #include <kpluginmetadata.h>
 
 namespace Plasma
@@ -109,9 +111,11 @@
     , apiMinor(0)
     , apiRevision(0)
 {
+#if HAVE_X11
     if (KWindowSystem::isPlatformX11()) {
         compositingActive = KX11Extras::self()->compositingActive();
     }
+#endif
 
     ThemeConfig config;
     cacheTheme = config.cacheTheme();
@@ -158,10 +162,12 @@
         scheduleThemeChangeNotification(PixmapCache | SvgElementsCache);
     });
 
+#if HAVE_X11
     if (KWindowSystem::isPlatformX11()) {
         connect(KX11Extras::self(), &KX11Extras::compositingChanged, this, &ThemePrivate::compositingChanged);
         compositingChanged(KX11Extras::compositingActive());
     }
+#endif
 }
 
 ThemePrivate::~ThemePrivate()
--- a/src/plasmaquick/plasmawindow.cpp	2024-06-12 02:51:06.000000000 -0700
+++ b/src/plasmaquick/plasmawindow.cpp	2024-06-17 22:34:18.073292563 -0700
@@ -13,8 +13,9 @@
 
 #include <KWindowEffects>
 #include <KWindowSystem>
+#if HAVE_X11
 #include <KX11Extras>
-
+#endif
 #include <Plasma/Theme>
 
 using namespace Plasma;
@@ -143,9 +144,11 @@
 {
     // EWMH states that the state is reset every hide
     // Qt supports external factors setting state before the next show
+#if HAVE_X11
     if (KWindowSystem::isPlatformX11()) {
         KX11Extras::setState(winId(), NET::SkipTaskbar | NET::SkipPager | NET::SkipSwitcher);
     }
+#endif
     QQuickWindow::showEvent(e);
 }
 
@@ -171,11 +174,15 @@
                                              theme.backgroundSaturation(),
                                              mask);
 
+#if HAVE_X11
     if (!KWindowSystem::isPlatformX11() || KX11Extras::compositingActive()) {
         q->setMask(QRegion());
     } else {
         q->setMask(mask);
     }
+#else
+    q->setMask(QRegion());
+#endif
 }
 
 void PlasmaWindowPrivate::updateMainItemGeometry()
--- a/src/plasmaquick/dialog.cpp	2024-06-12 02:51:06.000000000 -0700
+++ b/src/plasmaquick/dialog.cpp	2024-06-17 22:32:15.240916802 -0700
@@ -25,7 +25,6 @@
 
 #include <KWindowInfo>
 #include <KWindowSystem>
-#include <KX11Extras>
 
 #include <KWindowEffects>
 #include <Plasma/Corona>
@@ -34,6 +33,7 @@
 #include <optional>
 
 #if HAVE_X11
+#include <KX11Extras>
 #include <qpa/qplatformwindow_p.h>
 #endif
 
@@ -251,7 +251,7 @@
                                                  theme.backgroundIntensity(),
                                                  theme.backgroundSaturation(),
                                                  mask);
-
+#if HAVE_X11
         if (!KWindowSystem::isPlatformX11() || KX11Extras::compositingActive()) {
             if (hasMask) {
                 hasMask = false;
@@ -261,6 +261,12 @@
             hasMask = true;
             q->setMask(dialogBackground->mask());
         }
+#else
+        if (hasMask) {
+           hasMask = false;
+           q->setMask(QRegion());
+        }
+#endif
         if (q->isVisible()) {
             DialogShadows::instance()->addWindow(q, dialogBackground->enabledBorders());
         }
--- a/src/plasmaquick/appletpopup.cpp	2024-06-12 02:51:06.000000000 -0700
+++ b/src/plasmaquick/appletpopup.cpp	2024-06-17 22:11:10.848607296 -0700
@@ -12,7 +12,9 @@
 
 #include <KConfigGroup>
 #include <KWindowSystem>
+#if HAVE_X11
 #include <KX11Extras>
+#endif
 #include <QSize>
 
 #include "applet.h"
@@ -65,12 +67,15 @@
     setAnimated(true);
     setFlags(flags() | Qt::Dialog);
 
+#if HAVE_X11
     if (KWindowSystem::isPlatformX11()) {
         KX11Extras::setType(winId(), NET::AppletPopup);
     } else {
         PlasmaShellWaylandIntegration::get(this)->setRole(QtWayland::org_kde_plasma_surface::role::role_appletpopup);
     }
-
+#else
+    PlasmaShellWaylandIntegration::get(this)->setRole(QtWayland::org_kde_plasma_surface::role::role_appletpopup);
+#endif
     auto edgeForwarder = new EdgeEventForwarder(this);
     edgeForwarder->setMargins(padding());
     connect(this, &PlasmaWindow::paddingChanged, this, [edgeForwarder, this]() {
--- libplasma-1f3f984c02bcf6719fb96182e47546ce62dbef73/src/plasmaquick/CMakeLists.txt	2024-06-12 02:51:06.000000000 -0700
+++ CMakeLists.txt	2024-06-17 23:11:43.442851023 -0700
@@ -104,6 +104,9 @@
             XCB::XCB
             Qt6::GuiPrivate
     )
+    set(HAVE_X11 1)
+else()
+    set(HAVE_X11 0)
 endif()
 
 install(TARGETS PlasmaQuick EXPORT PlasmaQuickTargets ${KDE_INSTALL_TARGETS_DEFAULT_ARGS})
